@use "sass:math";

$items: null;
$item-label: null;

@mixin scale-transition($properties...) {
  transition: 1s ease-in-out;
  transition-property: $properties;
}

.Nav {
  $radius: 100px;
  $radius-label: 60px;
  $rotate-speed: 100s;

  --scale: 1;

  @include fill();
  @include scale-transition(background-color);

  position: fixed;
  pointer-events: none;
  background-color: transparent;
  z-index: 1;

  &-items {
    $items: & !global;
    $inset: 100px;

    @include scale-transition(width, height, top, right);

    position: absolute;
    width: calc($radius * var(--scale) * 2);
    height: calc($radius * var(--scale) * 2);
    top: $inset;
    right: $inset;
  }

  &-menu {
    @include scale-transition(margin-top, margin-left);

    display: flex;
    justify-content: center;
    align-items: center;
    width: 100%;
    height: 100%;
    animation: Rotate $rotate-speed linear infinite forwards;

    #{$items}:hover & {
      animation-play-state: paused;
    }
  }

  &-itemImage {
    animation: Rotate $rotate-speed linear infinite reverse backwards;

    #{$items}:hover & {
      animation-play-state: paused;
    }

    > .Boshi {
      @include scale-transition(transform);

      transform: scale(calc(var(--scale) * 0.5));
    }
  }

  &-itemLabel {
    $item-label: & !global;

    position: absolute;
  }

  &-itemName {
    animation: Rotate $rotate-speed linear infinite reverse backwards;

    #{$items}:hover & {
      animation-play-state: paused;
    }
  }

  &-item {
    position: absolute;
    pointer-events: all;
    list-style-type: none;

    $n: 7;
    $a: math.div(360, $n);

    @for $i from 0 to $n + 1 {
      &:nth-child(#{$i + 1}) {
        @include scale-transition(transform);

        transform: translate(
          calc($radius * var(--scale) * cos($i * #{$a}deg)),
          calc($radius * var(--scale) * sin($i * #{$a}deg))
        );

        #{$item-label} {
          @include scale-transition(transform);

          transform: translate(
            calc($radius-label * var(--scale) * cos($i * #{$a}deg)),
            calc($radius-label * var(--scale) * sin($i * #{$a}deg))
          );
        }
      }
    }
  }
}

.NavItem {
  $c: &;
  $hover-speed: 0.2s;

  @include scale-transition(width, height);

  display: flex;
  justify-content: center;
  align-items: center;
  width: calc(80px * var(--scale));
  height: calc(80px * var(--scale));

  &:hover {
    z-index: 1;
  }

  &-link {
    display: flex;
    justify-content: center;
    transition: transform $hover-speed;
  }

  &:hover &-link {
    transform: perspective(1000px) translateZ(200px);
  }

  &-name {
    @include scale-transition(font-size);

    display: block;
    opacity: 0;
    color: $white;
    text-shadow: $coral 0px 0 6px;
    font-size: calc($font-size1 * var(--scale));
    text-align: center;
    transition: opacity $hover-speed;

    @include desktop {
      font-size: calc($font-size2 * var(--scale));
    }

    #{$items}:hover & {
      opacity: 0.5;
    }

    #{$c}:hover & {
      opacity: 1;
    }
  }
}

@keyframes Rotate {
  from {
    transform: rotate(0deg);
  }

  to {
    transform: rotate(360deg);
  }
}
