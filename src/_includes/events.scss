@use "shared" as *;

$event-list: null;

.Events {
  // -- shared --
  *::selection {
    background-color: rgba($pink, 0.6);
  }

  // -- elements --
  &-title {
    position: relative;
    text-shadow: $color-shadow-text 3px 0 4px;
    transform: rotate(-2deg);
    z-index: 1;

    @include mobile {
      margin-top: $spacing2;
    }

    @include desktop {
      margin-left: -100px;
    }

    > dl {
      display: flex;
      flex-wrap: wrap;

      > *:nth-child(1) {
        transform: rotate(1deg);

        @include mobile {
          margin-left: -10px;
        }

        @include desktop {
          margin-top: 10px;
        }
      }

      > *:nth-child(2) {
        transform: rotate(3deg);
        margin-left: 15px;

        @include mobile {
          flex-basis: 50%;
        }
      }

      > *:nth-child(3) {
        transform: rotate(2deg);

        @include mobile {
          margin-left: 15px;
        }

        @include desktop {
          margin-left: -10px;
          margin-top: 40px;
        }

        dd {
          margin-top: -20px;
        }
      }

      > *:nth-child(4) {
        transform: rotate(-1deg);

        @include mobile {
          margin-left: 10px;
          margin-top: 10px;
        }

        @include desktop {
          margin-left: 30px;
          margin-top: 60px;
        }
      }
    }
  }

  $content: null;

  &-content {
    $content: &;

    display: flex;
    flex-direction: column;
    gap: $spacing5;
  }

  &-list {
    position: relative;
  }
}

.EventsWord {
  position: relative;

  &:hover {
    color: $blue0;
    z-index: 1;
  }

  &:hover &-text {
    animation: Jump 0.3s ease-in-out;
  }

  dt {
    @include mobile {
      font-size: $font-size5;
    }

    @include desktop {
      font-size: $font-size8;
    }
  }

  &--small dt {
    @include mobile {
      font-size: $font-size2;
    }

    @include desktop {
      font-size: $font-size3;
    }
  }

  dd {
    position: absolute;
    visibility: hidden;
    font-size: $font-size0;
    transform: rotate(calc(-3deg + var(--rand) * 6deg));
  }

  &:hover dd {
    visibility: visible;
  }

  @keyframes Jump {
    0% {
      transform: translateY(+0px);
    }

    50% {
      transform: translateY(-10px);
    }

    100% {
      transform: translateY(0px);
    }
  }
}

.EventList {
  $event-list: & !global;

  &-header {
    display: flex;
    align-items: center;
    gap: $spacing2;
    margin-bottom: $spacing2;
  }

  &-title {
    text-shadow: $color-shadow-text 3px 0 4px;

    @include mobile {
      font-size: $font-size3;
      flex-grow: 1;
      flex-basis: 100%;
    }

    @include desktop {
      font-size: $font-size4;
    }
  }

  &-items {
    display: flex;
    flex-direction: column;
    gap: $spacing4;

    @include desktop {
      gap: $spacing3;
    }
  }

  &-archiveToggle {
    display: flex;
    gap: $spacing0;
  }
}

.EventFallback {
  margin-left: $spacing4;
  text-shadow: $color-shadow-text 3px 0 4px;
  color: $blue0;
  transform: skew(-2deg, -2deg);

  @include mobile {
    font-size: $font-size2;
  }

  @include desktop {
    max-width: 600px;
    font-size: $font-size3;
  }

  &-text {
    display: inline-block;

    &:hover {
      animation: 0.1s FallbackShake infinite linear;
    }

    @keyframes FallbackShake {
      0% {
        transform: translateX(+0px);
      }

      25% {
        transform: translateX(-2px);
      }

      75% {
        transform: translateX(+2px);
      }

      100% {
        transform: translateX(+0px);
      }
    }
  }
}

.EventCard {
  $c: &;

  $poster-top-mobile: 45px;
  $poster-size-mobile: 100px;
  $poster-size-desktop: 200px;

  position: relative;
  display: flex;
  flex-direction: column;
  justify-content: center;
  opacity: max(calc(1 - var(--index) * 0.02), 0.1);
  transition: opacity 0.3s;

  @include desktop {
    width: $desktop-max;
    min-height: $poster-size-desktop;
    margin-left: calc(
      min(var(--index) / 32, 1) * (var(--rand) - 0.5) * 2 * 20vw
    );
    padding-left: $poster-size-desktop + $spacing2;
  }

  &:hover {
    opacity: 1;
    z-index: 420 !important;
  }

  // TODO: this won't work on older browsers; maybe need a js fallback solution
  #{$event-list}:has(input:checked) & {
    margin-left: 0px !important;
    opacity: 0.9 !important;
  }

  &-poster {
    @include flex-center;

    position: absolute;
    order: 3;
    cursor: zoom-in;

    @include mobile {
      top: $poster-top-mobile;
    }

    @include desktop {
      left: 0px;
    }
  }

  &-posterFrame {
    $poster-rotate: (
      translateX(calc(-10px + var(--rand) * 20px))
        rotate(calc(-1deg + var(--rand) * 2deg))
    );

    position: relative;
    display: flex;
    align-items: center;
    transform: $poster-rotate;
    transition: transform 0.3s;

    @include mobile {
      @include square($poster-size-mobile);
    }

    @include desktop {
      @include square($poster-size-desktop);
    }

    #{$c}:hover & {
      transform: $poster-rotate skew(-2deg, -2deg);
    }

    & > img {
      @include square(100%);

      object-fit: cover;
      border-radius: $radius0;
    }
  }

  &-posterBoshi {
    $rot-dist: calc($poster-size-desktop / 2 * sqrt(2));
    $rot-min: 90deg;
    $rot-span: 180deg;

    position: absolute;
    height: 50px;
    z-index: -1;
    transition: transform 0.3s;

    > img {
      @include square(100%);

      filter: drop-shadow(0px 0px 10px $color-shadow-card);
    }

    #{$c}:hover & {
      transform: (
        translateX(calc($rot-dist * cos($rot-min + var(--rand) * $rot-span)))
          translateY(calc($rot-dist * sin($rot-min + var(--rand) * $rot-span)))
      );
    }
  }

  &-body {
    display: contents;
  }

  .-body-row {
    transform-origin: left center;
    transform: rotate(calc(-6deg + var(--rand) * 12deg));
    transition: transform 0.3s;
  }

  @mixin body-row {
    @extend .-body-row;

    #{$c}:hover & {
      transform: skew(-4deg, -4deg);
    }
  }

  &-name {
    @include body-row();

    order: 2;
    position: relative;
    font-size: $font-size3;
    text-shadow: $color-shadow-text 3px 0 1px;
    text-decoration: underline $coral 2px;

    @include mobile {
      margin-left: 50px;
      min-height: $poster-size-mobile + $poster-top-mobile;
    }

    @include desktop {
      left: -30px;
    }
  }

  &-anchor {
    position: relative;
    color: $black;

    #{$c}:hover & {
      &::before {
        content: "";

        @include background($riso: 3, $color: rgba($coral, 0.4));

        position: absolute;
        left: 0;
        right: 0;
        top: $spacing2;
        bottom: $spacing2;
        z-index: -1;
      }
    }
  }

  &-date {
    @include body-row();

    order: 1;
    position: relative;
    text-transform: lowercase;
    mix-blend-mode: difference;
    text-shadow: $color-shadow-text 3px 0 4px;

    @include mobile {
      color: $blue0;
      transform: rotate(-2deg);
    }

    @include desktop {
      left: -60px;
      color: $white;
      font-size: 1.8rem;
    }
  }

  &-text {
    @include body-row();

    order: 4;
    position: relative;
    padding: $spacing1;
    box-shadow: 10px 10px 20px $color-shadow-card;
    max-width: 500px;
    margin-top: $spacing2;

    &:before {
      content: "";

      @include background($riso: 6);
      @include fill();

      opacity: 0.6;
      z-index: -1;
      filter: blur(10px);
    }
  }

  &-desc {
    // this is nececessary for the text to be selectable over the
    // absolutely positioned border that is a sibling of this el
    position: relative;
  }
}
