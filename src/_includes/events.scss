$list: null;

.Events {
  &-list {
    margin-top: $spacing5;
  }

  &-title {
    position: relative;
    font-size: $font-size4;
    text-shadow: $color-shadow1 3px 0 4px;

    @include desktop {
      font-size: $font-size5;
    }
  }
}

.EventsWord {
  display: inline-block;
  position: relative;

  &:hover {
    color: $blue0;
    animation: Shake 0.3s linear;
    z-index: 1;
  }

  dd {
    position: absolute;
    visibility: hidden;
    font-size: $font-size0;
    transform: rotate(calc(-3deg + var(--rand) * 6deg));
  }

  dt:hover + dd {
    visibility: visible;
  }

  @keyframes Shake {
    0% {
      transform: translateX(+0px);
    }

    25% {
      transform: translateX(-1px) rotate(-0.5deg);
    }

    75% {
      transform: translateX(+1px) rotate(+0.5deg);
    }

    100% {
      transform: translateX(+0px);
    }
  }
}

.EventList {
  $list: & !global;

  &-header {
    display: flex;
    align-items: center;
    gap: $spacing2;
    margin-bottom: $spacing2;
  }

  &-title {
    font-size: $font-size2;
    text-shadow: $color-shadow1 3px 0 4px;

    @include desktop {
      font-size: $font-size3;
    }
  }

  &-items {
    display: flex;
    flex-direction: column;
    gap: $spacing4;

    @include desktop {
      gap: $spacing0;
    }
  }
}

.EventCard {
  $c: &;

  position: relative;
  display: flex;
  align-items: center;
  flex-direction: column;
  opacity: max(calc(1 - var(--index) * 0.02), 0.1);

  @include desktop {
    width: $desktop-max;
    flex-direction: row;
    margin-left: calc(min(var(--index) / 16, 1) * var(--rand) * 50vw);
  }

  &:hover {
    z-index: 420 !important;
  }

  /* TODO: this won't work on older browsers; maybe need a js fallback solution */
  #{$list}:has(input:checked) & {
    margin-left: 0px !important;
    opacity: 0.9 !important;
  }

  &-anchor {
    display: contents;
  }

  &-poster {
    @include flex-center;
    position: relative;
  }

  $poster-width: 200px;

  &-posterFrame {
    $poster-rotate: (
      translateX(calc(-10px + var(--rand) * 20px))
        rotate(calc(-1deg + var(--rand) * 2deg))
    );

    position: relative;
    display: flex;
    align-items: center;
    width: $poster-width;
    height: $poster-width;
    transform: $poster-rotate;
    transition: transform 0.3s;

    #{$c}:hover & {
      transform: $poster-rotate skew(-2deg, -2deg);
    }

    & > img {
      width: 100%;
      height: 100%;
      object-fit: cover;
      border-radius: $radius0;
    }
  }

  &-posterBoshi {
    $rot-dist: calc($poster-width / 2 * sqrt(2));
    $rot-min: 90deg;
    $rot-span: 180deg;

    position: absolute;
    height: 50px;
    z-index: -1;
    transition: transform 0.3s;

    > img {
      width: 100%;
      height: 100%;
      filter: drop-shadow(0px 0px 10px $color-shadow0);
    }

    #{$c}:hover & {
      transform: (
        translateX(calc($rot-dist * cos($rot-min + var(--rand) * $rot-span)))
          translateY(calc($rot-dist * sin($rot-min + var(--rand) * $rot-span)))
      );
    }
  }

  &-body {
    position: relative;
    display: flex;
    flex-direction: column;
    flex: 1;
    min-height: 140px;
    gap: $spacing1;
    padding: $spacing2;
    transform: rotate(calc(-8deg + var(--rand) * 16deg));
    box-shadow: 10px 10px 20px $color-shadow0;
    mix-blend-mode: hard-light;
    transition: transform 0.3s;

    @include mobile {
      gap: -$spacing2;
    }

    #{$c}:hover & {
      transform: skew(-1deg, -1deg);
    }
  }

  &-bg {
    @include background($riso: 6);
    @include fill();

    position: absolute;
    opacity: 0.6;
    z-index: -1;
    filter: blur(10px);
  }

  &-title {
    display: flex;
    align-items: baseline;
    gap: $spacing1;
  }

  &-name {
    position: relative;
    font-size: $font-size2;
    text-shadow: $color-shadow1 3px 0 4px;
    text-decoration: underline $coral 2px;

    #{$c}:hover & {
      &::before {
        content: "";

        @include background($riso: 3, $color: rgba($coral, 0.4));

        position: absolute;
        left: 0;
        right: 0;
        top: $spacing2;
        bottom: $spacing2;
        z-index: -1;
      }
    }
  }

  &-date {
    position: absolute;
    font-size: $font-size4;
    text-transform: lowercase;
    color: $white;
    mix-blend-mode: overlay;

    @include mobile {
      top: -35px;
      left: -20px;
      transform: rotate(-2deg);
    }

    @include desktop {
      top: 0;
      bottom: 0;
      padding-left: $spacing4;
      padding-right: $spacing4;
      font-size: 8rem;
      text-align: right;
      white-space: nowrap;
      transform: scale(80%);
    }
  }
}

.EventCardBorder {
  --border-width: 3px;
  --border-offset: -1.5px;
  --border-dash: 6px;

  overflow: visible;
  position: absolute;
  top: var(--border-offset);
  left: var(--border-offset);
  width: calc(100% + var(--border-width));
  height: calc(100% + var(--border-width));

  &-shape {
    width: 100%;
    height: 100%;
    fill: $clear;
    stroke: $color-border0;
    stroke-width: var(--border-width);
    stroke-dasharray: var(--border-dash) var(--border-dash);
    stroke-dashoffset: 0;
  }

  &--white &-shape {
    stroke: $color-border1;
  }

  &--rainbow {
    --border-width: 6px;
    --border-offset: -3px;
  }

  &--rainbow &-shape {
    animation:
      BorderMarch 3s linear forwards infinite,
      BorderRainbow 1s linear infinite;
  }

  @keyframes BorderMarch {
    0% {
      stroke-dashoffset: 0;
    }
    100% {
      stroke-dashoffset: -60px;
    }
  }

  @keyframes BorderRainbow {
    0% {
      stroke: #ff0000;
    }
    12.5% {
      stroke: #ffff00;
    }
    37.5% {
      stroke: #00ff00;
    }
    62.5% {
      stroke: #00ffff;
    }
    87.5% {
      stroke: #ff00ff;
    }
    100% {
      stroke: #ff0000;
    }
  }
}
